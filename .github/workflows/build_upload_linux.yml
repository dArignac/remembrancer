name: Build and Upload Artifacts for Linux

# @semantic-release/github publishes the release as final step
on:
  release:
    types: [published]

env:
  NODE_VERSION: 16.17.1
  TARGET_NAME: linux-x86_64

jobs:

  build:
    name: Build release and upload
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        persist-credentials: false
        submodules: recursive

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache node_modules
      uses: actions/cache@v3
      id: node-cache
      with:
        path: node_modules
        key: linux-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          linux-node-

    - name: Install node packages
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
    
    - name: Cache Rust
      uses: Swatinem/rust-cache@v1

    - name: Install Dependencies for Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

    - name: Bundle application
      run: npm run tauri build
      env:
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

    - name: Store signature as artifact
      uses: actions/upload-artifact@v3
      with:
        name: release-signature-${{ env.TARGET_NAME }}-${{ github.ref_name }}
        path: src-tauri/target/release/bundle/appimage/remembrancer_*_amd64.AppImage.tar.gz.sig

    - name: Attach binary to tags
      run: node ci/attachBinariesToRelease.mjs ${{ secrets.PAT }} ${{ env.TARGET_NAME }}
  
  update:
    name: Update the Tauri updater file
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: write

    steps:
    - name: Clone repo
      uses: actions/checkout@v3
      with:
        ref: tauri-updates

    - name: Download signature file for Linux
      id: signature-linux
      uses: actions/download-artifact@v3
      with:
        name: release-signature-linux-x86_64-${{ github.ref_name }}
    
    - name: Create update file
      run: ./create-update.sh "${{ github.ref_name }}" ${{ steps.signature-linux.outputs.download-path }}

    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: "update for release ${{ github.ref_name }}"
        file_pattern: "update.json"
